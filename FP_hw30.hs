{--30.1
а. Описать функцию find с двумя параметрами - условие (логическая функция) и список. 
Функция должна искать первый элемент в списка, удовлетворяющий условию, 
и возвращать Just элемент или Nothing, если ничего не найдено. 

Примеры вызова find:

find (>6) [1, 2, 8, 3]
Результат должен быть Just 8

find (>6) [1, 2, 5, 3]
Результат должен быть Nothing

б. С помощью этого варианта find описать функцию f, которая делает вот что:
В данном списке f ищет:
- первое число, меньшее 5
- первое число, большее 10
- первое число, не равное 7
и возвращает:
- если хотя бы один поиск был неудачным, возвращает Nothing
- если все числа найдены, возвращает Just для их суммы.

Дополнительное условие:
Обязательно надо использовать конструкцию do (как это можно сделать, мы обсуждали на последнем занятии).

Примеры вызова:

f [7, 6, 4, 3, 20, 15, 9] 
Результат должен быть равен Just 30, потому что первое < 5 - это 4, первое > 10 - это 20 и первое /= 7 - это 6 и их сумма равна 30

f [7, 6, 4, 3, 9]
Результат должен быть равен Nothing, потому что один из трех поисков ничего не находит.

Замечание: 
- Это очень, очень простое упражнение, все решение есть в слайдах.. Просто балл в подарок :)--}

find p [] = Nothing
find p (l:ls) = if p l 
                then Just l
                else find p ls


f ls = do
    l_5  <- find (<5)  ls
    l_10 <- find (>10) ls
    l_7  <- find (/=7) ls
    return (l_5 + l_10 + l_7 )




{--30.3--}



f39 x = 
   sin39 x >>>= \y ->
   exp39 x >>>= \z ->
   return1 (y+z)


infixr 9 >>>=
(>>>=) (val, price) f = (let 
                          new_val = fst (f val)
                          new_price = price + snd (f val)
                         in (new_val, new_price)) 


return1 val = (val, 0)

sin39 x = (sin x, 2)
exp39 x = (exp x, 5)