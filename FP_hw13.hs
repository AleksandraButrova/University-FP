{--13.1
Описать функцию digitsToNum, которая по данному списку целых чисел 
(все эти числа от 0 до 9) возвращает число, состоящее из таких цифр.

Пример вызова:
digitsToNum [1,2,3,4] - результат должен быть равен 1234

Дополнительные условие:
- в этой задаче нельзя использовать рекурсию
- из стандартных функций можно использовать _только_ foldr (именно foldr, с foldl то все совсем просто)
- еще, конечно, можно использовать арифметические операторы и, если хотите, 
функции работы с парами (это, кстати, подсказка))--}



--digitsToNum (list) = fst ( foldr (\l pair -> (l * 10 ^ snd pair + fst pair, snd pair + 1 )) (0, 0) (list))
-- max3 :: Ord a => [a] -> [a] -> [a] -> [a]
-- max3 a b c = zipWith3 max3' a b c

-- max3' a b c | a > b && a > c = a    
--             | b > a && b > c = b
--             | otherwise = c

fibStream :: [Integer]
fibStream = zipWith (+) [0, 1] fibStream


