# *Задача (скорее упражнение) на обычном языке (дополнительная, до 10.10 включительно*

# В С# для контейнеров определен метод Any, который позволяет проверить, 
# есть ли в контейнере элемент, удовлетворяющий данному условию. И есть аналогичный метод All. 
# Вот примеры их вызовов:

# int [] a = {-1, 2, -3, 4};
# bool b = a.Any(x => x > 0); // Верно, ли что в массиве есть положительный элемент?
# b = a.All(x => x > 0); // Верно, ли что все элементы в массиве положительные?

# Используя только эти методы и лямбда выражения, проверить для данного двумерного массива массивов 
# (или, если хотите, списка списков), что в каждом из массивов есть хотя бы один элемент, делящийся на 7.

# Замечания:
# - Желающие могут сделать эту задачу на любом обычном языке, в котором есть похожие возможности
# - На С++, частности, есть аналогичные функции any_of, all_of и даже еще функция none_of. 
# - Если для кого-то задача кажется слишком сложной, а попробовать функциональное программирование в С# хочется, 
#можете решить задачу попроще:
# Дан массив чисел. Проверить, верно ли, что в этом массиве, есть хотя бы одно двузначное число
# - Напоминание: код должен быть таким, чтобы его можно было скомпилировать и запустить, с каким-нибудь примером вызова.

def anyMod7 (lst):
    return all(\
            any(element % 7 == 0 for element in one_list) == True \
                for one_list in lst)

print(anyMod7([[]]))                #False
print(anyMod7([[42]]))              #True
print(anyMod7([[43]]))              #False    
print(anyMod7([[7], [2, 14]]))      #True
print(anyMod7([[1, 2], [3, 11]]))   #False



